--- /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/vader/VertLocInterp.cc.tmp	2023-11-10 16:12:28.248287204 +0100
+++ /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/vader/VertLocInterp.cc	2023-11-08 13:53:37.393553886 +0100
@@ -38,16 +38,12 @@
 void verticalInterpolationFromFullLevels(const oops::patch::Variables & activeVars,
                                          const atlas::FieldSet & fsetIn,
                                          atlas::FieldSet & fsetOut) {
-  // winds are on half-levels
-  oops::patch::Variables windnames(std::vector<std::string>{"eastward_wind", "northward_wind"});
-
   // inner stagger is full-levels
   for (const std::string & v : activeVars.variables()) {
     auto fldInView = atlas::array::make_view<const double, 2>(fsetIn[v]);
     auto fldOutView = atlas::array::make_view<double, 2>(fsetOut[v]);
 
-    if (((v.find("_levels_minus_one")) != std::string::npos) ||
-        windnames.has(v)) {
+    if ((v.find("_levels_minus_one")) != std::string::npos) {
       for (atlas::idx_t jn = 0; jn < fldInView.shape()[0]; ++jn) {
         fldOutView(jn, 0) = fldInView(jn, 0);
         for (atlas::idx_t jl = 0; jl < fldInView.shape()[1]-1; ++jl) {
@@ -74,9 +70,6 @@
 void mo_buggy_verticalInterpolationFromHalfLevels(const oops::patch::Variables & activeVars,
                                                   const atlas::FieldSet & fsetIn,
                                                   atlas::FieldSet & fsetOut) {
-  // winds are on half-levels
-  oops::patch::Variables windnames(std::vector<std::string>{"eastward_wind", "northward_wind"});
-
   // The Met Office bug unfortunately uses the interpolation weights needed for
   // going from full levels to half levels, when in fact we are wanting to interpolate
   // from half-levels.  This is not an issue if the vertical staggering is uniform.
@@ -85,8 +78,7 @@
     auto fldInView = atlas::array::make_view<const double, 2>(fsetIn[v]);
     auto fldOutView = atlas::array::make_view<double, 2>(fsetOut[v]);
 
-    if (((v.find("_levels_minus_one")) != std::string::npos) ||
-        windnames.has(v)) {
+    if ((v.find("_levels_minus_one")) != std::string::npos) {
       fldOutView.assign(fldInView);
     } else if ((v.find("_levels")) != std::string::npos) {
       for (atlas::idx_t jn = 0; jn < fldInView.shape()[0]; ++jn) {
@@ -113,15 +105,11 @@
 void verticalInterpolationFromFullLevelsAD(const oops::patch::Variables & activeVars,
                                            atlas::FieldSet & fsetIn,
                                            atlas::FieldSet & fsetOut) {
-  // winds are on half-levels
-  oops::patch::Variables windnames(std::vector<std::string>{"eastward_wind", "northward_wind"});
-
   for (const std::string & v : activeVars.variables()) {
     auto fldInView = atlas::array::make_view<double, 2>(fsetIn[v]);
     auto fldOutView = atlas::array::make_view<double, 2>(fsetOut[v]);
 
-    if ((v.find("_levels_minus_one")) != std::string::npos ||
-        windnames.has(v)) {
+    if ((v.find("_levels_minus_one")) != std::string::npos) {
       for (atlas::idx_t jn = 0; jn < fldInView.shape()[0]; ++jn) {
         for (atlas::idx_t jl = fldInView.shape()[1]-2; jl > -1; --jl) {
           fldInView(jn, jl+1) += 0.5 * fldOutView(jn, jl+1);
@@ -160,15 +148,11 @@
 void mo_buggy_verticalInterpolationFromHalfLevelsAD(const oops::patch::Variables & activeVars,
                                                     atlas::FieldSet & fsetIn,
                                                     atlas::FieldSet & fsetOut) {
-  // winds are on half-levels
-  oops::patch::Variables windnames(std::vector<std::string>{"eastward_wind", "northward_wind"});
-
   for (const std::string & v : activeVars.variables()) {
     auto fldInView = atlas::array::make_view<double, 2>(fsetIn[v]);
     auto fldOutView = atlas::array::make_view<double, 2>(fsetOut[v]);
 
-    if ((v.find("_levels_minus_one")) != std::string::npos ||
-        windnames.has(v)) {
+    if ((v.find("_levels_minus_one")) != std::string::npos) {
       for (atlas::idx_t jn = 0; jn < fldInView.shape()[0]; ++jn) {
         for (atlas::idx_t jl = 0; jl < fldInView.shape()[1]; ++jl) {
           fldInView(jn, jl) += fldOutView(jn, jl);
