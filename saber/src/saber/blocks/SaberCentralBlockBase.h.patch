--- /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/blocks/SaberCentralBlockBase.h.tmp	2023-11-10 16:12:29.140286024 +0100
+++ /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/blocks/SaberCentralBlockBase.h	2023-11-09 10:22:21.334376184 +0100
@@ -30,6 +30,7 @@
 #include "oops/util/Printable.h"
 
 #include "saber/blocks/SaberBlockParametersBase.h"
+#include "saber/oops/ECUtilities.h"
 
 // Forward declaration
 namespace oops {
@@ -224,11 +225,11 @@
   // Read fieldsets as increments
   for (auto & input : this->fieldsToRead()) {
     // Create increment
-    oops::Increment<MODEL> dx(geom, vars, date);
+    oops::Increment<MODEL> dx(geom, templatedVars<MODEL>(vars), date);
     dx.read(input.first);
     oops::Log::test() << "Norm of input parameter " << input.second.name()
                       << ": " << dx.norm() << std::endl;
-    util::copyFieldSet(dx.fieldSet(), input.second);
+    util::copyFieldSet(dx.increment().fieldSet(), input.second);
   }
 
   oops::Log::trace() << "SaberCentralBlockBase::read done" << std::endl;
@@ -247,12 +248,12 @@
     = this->fieldsToWrite();
 
   // Create increment
-  oops::Increment<MODEL> dx(geom, vars, date);
+  oops::Increment<MODEL> dx(geom, templatedVars<MODEL>(vars), date);
 
   // Write fieldsets as increments
   for (const auto & output : outputs) {
-    dx.fieldSet() = util::copyFieldSet(output.second);
-    dx.synchronizeFields();
+    dx.increment().fieldSet() = util::copyFieldSet(output.second);
+    dx.increment().synchronizeFields();
     oops::Log::test() << "Norm of output parameter " << output.second.name()
                       << ": " << dx.norm() << std::endl;
     dx.write(output.first);
