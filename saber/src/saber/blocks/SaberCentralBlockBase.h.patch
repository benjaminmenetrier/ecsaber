--- /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/blocks/SaberCentralBlockBase.h.tmp.bak	2023-11-20 18:49:10.911352650 +0100
+++ /home/benjaminm/code/oops-bundle/ecsaber/saber/src/saber/blocks/SaberCentralBlockBase.h	2023-11-20 18:39:33.466418614 +0100
@@ -30,6 +30,7 @@
 #include "oops/util/Printable.h"
 
 #include "saber/blocks/SaberBlockParametersBase.h"
+#include "saber/oops/ECUtilities.h"
 
 // Forward declaration
 namespace oops {
@@ -223,12 +224,15 @@
 
   // Read fieldsets as increments
   for (auto & input : this->fieldsToRead()) {
+    // Create variables
+    oops::Variables<MODEL> varsT(templatedVarsConf(vars));
+
     // Create increment
-    oops::Increment<MODEL> dx(geom, vars, date);
+    oops::Increment<MODEL> dx(geom, varsT, date);
     dx.read(input.first);
     oops::Log::test() << "Norm of input parameter " << input.second.name()
                       << ": " << dx.norm() << std::endl;
-    util::copyFieldSet(dx.fieldSet(), input.second);
+    util::copyFieldSet(dx.increment().fieldSet(), input.second);
   }
 
   oops::Log::trace() << "SaberCentralBlockBase::read done" << std::endl;
@@ -246,13 +250,16 @@
   std::vector<std::pair<eckit::LocalConfiguration, atlas::FieldSet>> outputs
     = this->fieldsToWrite();
 
+  // Create variables
+  oops::Variables<MODEL> varsT(templatedVarsConf(vars));
+
   // Create increment
-  oops::Increment<MODEL> dx(geom, vars, date);
+  oops::Increment<MODEL> dx(geom, varsT, date);
 
   // Write fieldsets as increments
   for (const auto & output : outputs) {
-    dx.fieldSet() = util::copyFieldSet(output.second);
-    dx.synchronizeFields();
+    dx.increment().fieldSet() = util::copyFieldSet(output.second);
+    dx.increment().synchronizeFields();
     oops::Log::test() << "Norm of output parameter " << output.second.name()
                       << ": " << dx.norm() << std::endl;
     dx.write(output.first);
